log4j.rootLogger=${kiji.logger}

# By default, log INFO to the console.
kiji.logger=INFO,console

# Define the console appender.
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.target=System.err
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=\u0020\u0020[%d{HH:mm:ss} %p %c]: %m%n


# Quiet down zookeeper; it's too noisy.
log4j.logger.org.apache.zookeeper=WARN
log4j.logger.org.apache.hadoop.hbase.client.HConnectionManager$HConnectionImplementation=WARN
log4j.logger.org.apache.hadoop.hbase.zookeeper=WARN
log4j.logger.org.apache.hadoop.hbase.client.HBaseAdmin=WARN

# Hadoop 1.x / HBase 0.92 emits many SASL exceptions to stdout; silence these.
log4j.logger.org.apache.zookeeper.client.ZooKeeperSaslClient=ERROR

# Suppress Kiji installer messages for tests
log4j.logger.org.kiji.schema.KijiInstaller=WARN

# DistributedCacheManager is noisy at INFO level.
log4j.logger.org.apache.hadoop.filecache.TrackerDistributedCacheManager=WARN

# To enable kiji debug logging, uncomment the following line.
# Note that because of the KijiCreation/DeletionThreads in integration tests,
# this will send a lot of info to stderr.
#log4j.logger.org.kiji.schema=DEBUG

# To enable resource cleanup debug logging, uncomment the following lines.
#log4j.logger.org.kiji.schema.impl.HBaseKiji.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseKijiTable.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseKijiRowScanner.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseSchemaTable.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseSystemTable.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseKijiTableReader.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.impl.HBaseKijiTableWriter.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.KijiMetaTable.Cleanup=DEBUG
#log4j.logger.org.kiji.schema.KijiTablePool.Cleanup=DEBUG
