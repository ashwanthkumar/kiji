#!/usr/bin/env python3
# -*- mode: python -*-
# -*- coding: utf-8 -*-

"""Build file for kiji-mapreduce.

The purpose of this script is to build the KijiMR artifacts as fast as
possible.

Usage:
    build [path/to/maven/local/repo]
"""

import os
import shutil
import sys
import time


def Rename(src, dst):
  """Rename the file refered to by src as dst.

  This wrapper allows to use named parameters.
  os.rename() doesn't allow named parameters on some platforms.
  """
  os.rename(src, dst)


def Main(args):
  this = os.path.abspath(args[0])
  root = os.path.dirname(os.path.dirname(os.path.dirname(this)))

  maven_local_repo = os.path.join(os.environ['HOME'], '.m2', 'repository')
  if len(args) > 1:
    maven_local_repo=args[1]

  os.chdir(root)
  command = """\
      mvn \
          -Dmaven.repo.local=%(maven_local_repo)s \
          --no-snapshot-updates \
          -DskipTests -DskipVerify -Dmaven.javadoc.skip=true \
          clean \
          install \
  """ % {
      'maven_local_repo': maven_local_repo,
  }
  print('-' * 80)
  print(command)
  print('-' * 80)
  exit_code = os.system(command)
  assert exit_code == 0

  # Profiling jar depends on the various bridges:
  kijimr_module_dir = os.path.join(root, 'kiji-mapreduce')
  os.chdir(kijimr_module_dir)

  now_ms = int(time.time() * 1000)
  saved_target = os.path.join(kijimr_module_dir, 'target.%d' % now_ms)
  target = os.path.join(kijimr_module_dir, 'target')
  Rename(src=target, dst=saved_target)

  command = """\
      mvn \
          -Dmaven.repo.local=%(maven_local_repo)s \
          --no-snapshot-updates \
          -DskipTests -DskipVerify -Dmaven.javadoc.skip=true \
          -Pprofiling -Dclassifier=profiling \
          clean \
          package \
  """ % {
      'maven_local_repo': maven_local_repo,
  }
  print('-' * 80)
  print(command)
  print('-' * 80)
  exit_code = os.system(command)

  assert (exit_code == 0)

  command = """\
      mvn \
          -Dmaven.repo.local=%(maven_local_repo)s \
          --no-snapshot-updates \
          -DskipTests -DskipVerify -Dmaven.javadoc.skip=true \
          -Pprofiling \
          install:install-file -Dfile=%(kijimr_module_dir)s/target/kiji-mapreduce-hadoop2-'${project.version}'-profiling.jar \
              -DpomFile=pom.xml -Dclassifier=profiling -Dpackaging=jar
  """ % {
      'maven_local_repo': maven_local_repo,
      'kijimr_module_dir': kijimr_module_dir,
  }
  print('-' * 80)
  print(command)
  print('-' * 80)
  exit_code = os.system(command)
  assert (exit_code == 0)

  shutil.rmtree(target)
  # Rename(
  #     src=target,
  #     dst=os.path.join(kijimr_module_dir, 'target.profiling.%d' % now_ms))
  Rename(src=saved_target, dst=target)


if __name__ == '__main__':
  Main(sys.argv)
